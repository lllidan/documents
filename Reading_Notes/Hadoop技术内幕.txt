P41:抽象类可以给某些方法提供默认实现。而继承的类可以选择是否重新实现这些方法。也就是说，抽象类具有良好的向后兼容性。当需要为抽象类添加新的方法是，只需要添加的方法提供了默认实现，用户之前的代码就不必修改了。
----------------------20171009--------------------------------
P42：Context:上下文这个东西记得从开始学Java就出现了，一直到WEB，软工。其实一直不是很理解。
在原来的记忆中，感觉上下文这个就是在自然语言的学习中的语境。迁移到程序设计中感觉有些怪。
今天看书正好又遇到了，上网查阅了相关资料，也问问了同学。
其实我认为可以初步的把Context理解成自然语言中的语境。在自然语言的上下文语境，
可以帮助我们理解难以理解的内容。程序语言中也是如此，Context类中往往也存储着帮助理解的内容，如变量的值，引入的宝内容等等。
如果我们把函数的参数列表中的形参以一个对象（Context）的形式传入的话，在需要修改的传入的类型时，就无需一个个的修改函数的形参列表了，可以直接通过更改Context类的内容来实现，因此保证了向后兼容性，具有良好的扩展性。





















--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
